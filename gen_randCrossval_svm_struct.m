% Great a structure of length crossval_n, that consists of training and
% test data with associated labels generated by random-draws (crossval_n
% times) from the full trial set
function svm_struct = gen_randCrossval_svm_struct( svm_mat, labels, crossval_n )
    
    svm_struct = struct;
    for i = 1:crossval_n
        % Separate into training sets and test set
        [train_idxs, test_idxs] = separate_trials(size(svm_mat, 2), 0.9); % Train on 90%, leave 10% out
        svm_struct(i).train_svm_mat     = svm_mat( :, train_idxs );
        svm_struct(i).train_labels = labels( train_idxs );
        svm_struct(i).test_svm_mat      = svm_mat( :, test_idxs );
        svm_struct(i).test_labels  = labels(  test_idxs );
    end
end


% separate_trials returns two sets of indexes to use to break a matrix of
% length mat_length into two new matrices. The first set of indices,
% train_idxs, will contain a fraction of the total indices equal to
% train_prop. The second set of indices, test_idxs, will contain the
% remainer.
function [train_idxs, test_idxs] = separate_trials( mat_length, train_prop )
    idx_vec = 1:mat_length;
    perm_idxs = randperm(numel( idx_vec ));

    train_length = round(mat_length * train_prop);

    train_idxs = perm_idxs(1:train_length);
    test_idxs  = perm_idxs(train_length+1:mat_length);
    
end
